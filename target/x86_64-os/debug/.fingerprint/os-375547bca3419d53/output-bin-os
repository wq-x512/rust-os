{"$message_type":"diagnostic","message":"cannot call non-const fn `ColorCode::new` in statics","code":{"code":"E0015","explanation":"A non-`const` function was called in a `const` context.\n\nErroneous code example:\n\n```compile_fail,E0015\nfn create_some() -> Option<u8> {\n    Some(1)\n}\n\n// error: cannot call non-const fn `create_some` in constants\nconst FOO: Option<u8> = create_some();\n```\n\nAll functions used in a `const` context (constant or static expression) must\nbe marked `const`.\n\nTo fix this error, you can declare `create_some` as a constant function:\n\n```\n// declared as a `const` function:\nconst fn create_some() -> Option<u8> {\n    Some(1)\n}\n\nconst FOO: Option<u8> = create_some(); // no error!\n```\n"},"level":"error","spans":[{"file_name":"src\\vga_buffer.rs","byte_start":1990,"byte_end":2033,"line_start":53,"line_end":53,"column_start":17,"column_end":60,"is_primary":true,"text":[{"text":"    color_code: ColorCode::new(Color::Yellow, Color::Black),","highlight_start":17,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"calls in statics are limited to constant functions, tuple structs and tuple variants","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider wrapping this expression in `std::sync::LazyLock::new(|| ...)`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0015]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot call non-const fn `ColorCode::new` in statics\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\vga_buffer.rs:53:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m53\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    color_code: ColorCode::new(Color::Yellow, Color::Black),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: calls in statics are limited to constant functions, tuple structs and tuple variants\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: consider wrapping this expression in `std::sync::LazyLock::new(|| ...)`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 1 previous error","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: aborting due to 1 previous error\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0015`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0015`.\u001b[0m\n"}
